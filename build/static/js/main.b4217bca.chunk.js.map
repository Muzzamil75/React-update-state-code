{"version":3,"sources":["cards.js","arrayFetch.js","practice/best.js","practice/addproject.js","practice/parent.js","index.js"],"names":["cards","props","react_default","a","createElement","className","alt","src","concat","id","name","ArrayFetch","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","robots","fetch","bind","assertThisInitialized","_this2","then","Response","json","data","setState","catch","error","console","log","style","height","alignItems","justifyContent","display","length","onClick","map","i","src_cards","key","email","Component","Best","pArr","title","category","nice","handleSubmit","e","refs","value","alert","newprojects","addProject","preventDefault","categoryOptions","categories","cat","onSubmit","type","ref","defaultProps","ReactDOM","render","arrayFetch","document","getElementById"],"mappings":"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","file":"static/js/main.b4217bca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst cards = (props) => {\r\n    return (\r\n        <div className=\"tc bg-light-green br3 pa3 ma2 dib bw2 shadow-5\" >\r\n            <img alt=\"rootbs\" src={`https://robohash.org/${props.id}?200*200`} />          \r\n            <div>\r\n                {props.id}\r\n                <p>{props.name}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default cards;\r\n\r\n","import React, { Component } from 'react';\r\nimport Card from './cards'\r\nclass ArrayFetch extends Component {\r\n    constructor(){\r\n        super();\r\n    this.state = { \r\n        robots: []\r\n        \r\n     }\r\n     this.fetch=this.fetch.bind(this);\r\n}\r\n    fetch(){\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(data => this.setState({robots:data}))\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render() { \r\n        const { robots } = this.state;\r\n\r\n        return (<div style={{\r\n            height:'inherit',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            display: 'flex'\r\n        }}>\r\n            {!robots.length > 0 && <button onClick={this.fetch} className=\"btn btn-primary\">Click to fetch Robots</button>}\r\n            <div>\r\n                {robots.length > 0 && robots.map(i=>{\r\n                    return <Card   name={i.name} key={i} email={i.email} id={i.id}/>\r\n\r\n                })}\r\n            </div>\r\n\r\n\r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default ArrayFetch;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Best extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //receving full aray of objects here\r\n        return (<div className=\"jombotron\">\r\n        <li>\r\n            {this.props.pArr.title} - {this.props.pArr.category}\r\n            </li>\r\n        \r\n        </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Best;","import React, { Component } from 'react';\r\n//import Best from './best';\r\nclass nice extends Component {\r\n    static defaultProps = { categories: ['web', 'samsung', 'opppo'] }\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            newprojects: {}\r\n\r\n        }\r\n\r\n    }\r\n\t\r\n\t//03084879106  //farhan\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.refs.title.value === '')\r\n            alert('title is required !!')\r\n        else {\r\n            this.setState\r\n                ({\r\n                    newprojects: {\r\n                        title: this.refs.title.value,\r\n                        category: this.refs.category.value\r\n                    }\r\n                    \r\n                }, \r\n                function () { \r\n                    //calling function written in parent component and passsing ned project object\r\n                    this.props.addProject(this.state.newprojects)\r\n                })\r\n        }\r\n\r\n        //stops the page to reload continuosly\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        //using hardcoded props\r\n        let categoryOptions = this.props.categories.map(cat => {\r\n            return <option key={cat} value={cat}> {cat}</option>\r\n        })\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <label>Title</label>\r\n                    <input type=\"text\" ref=\"title\" />\r\n\r\n\r\n                    <label>Title</label>\r\n                    <select ref=\"category\">\r\n                        {categoryOptions}\r\n\r\n                    </select>\r\n\r\n\r\n                    <input type=\"submit\" value=\"submit\" />\r\n                </form>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default nice;","import React, { Component } from 'react';\r\nimport Best from './best';\r\nimport Addproject from './addproject'\r\nclass nice extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n        \r\n    };\r\n    \r\n    componentWillMount(){\r\n        this.setState({\r\n            projects : [\r\n             {\r\n                title: 'senior',\r\n                category : 'webdesigner'\r\n\r\n            },{\r\n                title: 'junior',\r\n                \r\n                category : 'Pclaptop'\r\n\r\n            },{\r\n                title: 'Fresher',\r\n                category : 'mobile'\r\n\r\n            }\r\n        \r\n        ]\r\n    });\r\n    //console.log(\"mount  \" + this.state.projects);\r\n    }\r\n    niceF(){\r\n        alert('I am clicked!!')\r\n\r\n    }\r\n    //recevng object array from addprojecct\r\n    handleAddproject =(params)=>{\r\n        console.log(\"ye h wo \"+ params.category);\r\n        let Project = this.state.projects;   // var = state\r\n        Project.push(params);             // var+newComer\r\n        //console.log(\"ye h wo  new\"+ Project);\r\n        this.setState({params:Project})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"jumbotron jutify-content-center\">\r\n                <h1 className=\"bg-primary\">Here We are dealing with State update and geting function called by props with geting parameters</h1>\r\n\r\n            <button onClick={this.niceF} className=\"btn btn-danger\">i m a button</button>    \r\n            \r\n            \r\n            {this.state.projects.map(array=>{\r\n                return <Best key ={array} pArr={array}  />\r\n            })\r\n            }\r\n            <Addproject addProject={this.handleAddproject} />\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default nice;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import Card from './cards';\n// import { robots } from './robots';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport 'tachyons';\nimport ArrayFetch from './arrayFetch';\nimport Parent from './practice/parent'\n\n//sending full robots array as a prop to CardList\nReactDOM.render(<ArrayFetch />, document.getElementById('root'));\n\n// original \n// ReactDOM.render(<CardList robots={robots} />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}