{"version":3,"sources":["cards.js","practice/best.js","cardlist.js","arrayFetch.js","practice/addproject.js","practice/parent.js","index.js"],"names":["cards","props","react_default","a","createElement","className","alt","src","id","name","Best","React","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pArr","title","category","nice","handleSubmit","e","refs","value","alert","setState","newprojects","addProject","preventDefault","categoryOptions","categories","map","cat","key","onSubmit","type","ref","defaultProps","handleAddproject","params","console","log","Project","projects","push","onClick","niceF","array","best","addproject","ReactDOM","render","practice_parent","document","getElementById"],"mappings":"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","file":"static/js/main.ed5d8c49.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//receinvg props from CardList\r\nconst cards = (props) => {\r\n\r\n    return (\r\n        <div className=\"tc bg-light-green br3 pa3 ma2 dib bw2 shadow-5\" >\r\n      \r\n            <img alt=\"rootbs\" src={'https://robohash.org/{$props.id}?200*200'} />          \r\n            <div>\r\n                {props.id}\r\n                <p>{props.name}</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default cards;\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Best extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //receving full aray of objects here\r\n        return (<div className=\"jombotron\">\r\n        <li>\r\n            {this.props.pArr.title} - {this.props.pArr.category}\r\n            </li>\r\n        \r\n        </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Best;","import React from 'react';\r\nimport Card from './cards';\r\n\r\n/* //receivng the array of robots from index.js\r\nconst CardList = ({ robots }) => {\r\n    const array = robots.map((user, i) => {\r\n        //SENDING EACH ROBOT INFO TO CARD FOR DISPLAY\r\n      \r\n        return (\r\n            <Card\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n                Key={i} />)\r\n    })\r\n    return (\r\n        <div>\r\n            {array}\r\n        </div>\r\n\r\n    )} */\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            robots: []\r\n        }\r\n        this.fetchData = this.fetchData.bind(this);\r\n    }\r\n\r\n    fetchData() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({robots: data }))\r\n        .catch(err => console.error('Error ', err.toString()));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.fetchData}>Fetch</button>\r\n                <p>\r\n                    {this.state.robots.map(el => {\r\n                        return <Card key={el.id} email={el.email} name={el.name} id={el.id}\r\n                            />                       \r\n                    })}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport Card from './cards'\r\nclass nice extends Component {\r\n    constructor(){\r\n        super();\r\n    this.state = { \r\n        robots:[]\r\n        \r\n     }\r\n     this.fetch=this.fetch.bind(this);\r\n}\r\n    fetch(){\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(data => this.setState({robots:data}))\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render() { \r\n        return (<div>\r\n            <button onClick={this.fetch} className=\"btn btn-primary\">clickk</button>\r\n            <div>\r\n                {this.state.robots.map(i=>{\r\n                    return <Card   name={i.name} key={i} email={i.email} id={i.id}/>\r\n\r\n                })}\r\n\r\n            </div>\r\n\r\n\r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default nice;","import React, { Component } from 'react';\r\n//import Best from './best';\r\nclass nice extends Component {\r\n    static defaultProps = { categories: ['web', 'samsung', 'opppo'] }\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            newprojects: {}\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.refs.title.value === '')\r\n            alert('title is required !!')\r\n        else {\r\n            this.setState\r\n                ({\r\n                    newprojects: {\r\n                        title: this.refs.title.value,\r\n                        category: this.refs.category.value\r\n                    }\r\n                }, function () { \r\n                    //calling function written in parent component and passsing ned project object\r\n                    this.props.addProject(this.state.newprojects)\r\n                })\r\n        }\r\n\r\n        //stops the page to reload continuosly\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        //using hardcoded props\r\n        let categoryOptions = this.props.categories.map(cat => {\r\n            return <option key={cat} value={cat}> {cat}</option>\r\n        })\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <label>Title</label>\r\n                    <input type=\"text\" ref=\"title\" />\r\n\r\n\r\n                    <label>Title</label>\r\n                    <select ref=\"category\">\r\n                        {categoryOptions}\r\n\r\n                    </select>\r\n\r\n\r\n                    <input type=\"submit\" value=\"submit\" />\r\n                </form>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default nice;","import React, { Component } from 'react';\r\nimport Best from './best';\r\nimport Addproject from './addproject'\r\nclass nice extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n        \r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            projects : [\r\n             {\r\n                title: 'senior',\r\n                category : 'webdesigner'\r\n\r\n            },{\r\n                title: 'junior',\r\n                \r\n                category : 'Pclaptop'\r\n\r\n            },{\r\n                title: 'Fresher',\r\n                category : 'mobile'\r\n\r\n            }\r\n        \r\n        ]\r\n    });\r\n    //console.log(\"mount  \" + this.state.projects);\r\n    }\r\n    niceF(){\r\n        alert('I am clicked!!')\r\n\r\n    }\r\n    handleAddproject =(params)=>{\r\n        console.log(\"ye h wo \"+ params.category);\r\n        let Project = this.state.projects;   // var = state\r\n        Project.push(params);             // var+newComer\r\n        //console.log(\"ye h wo  new\"+ Project);\r\n        this.setState({params:Project})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"jumbotron jutify-content-center\">\r\n                <h1 className=\"bg-warning\">Here We are dealing with State update and geting function called by props with geting parameters</h1>\r\n\r\n            <button onClick={this.niceF} className=\"btn btn-danger\">i m a button</button>    \r\n            \r\n            \r\n            {this.state.projects.map(array=>{\r\n                return <Best key ={array} pArr={array}  />\r\n            })\r\n            }\r\n            <Addproject addProject={this.handleAddproject} />\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default nice;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import Card from './cards';\n//import { robots } from './robots';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport CardList from './cardlist';\nimport 'tachyons';\nimport ArrayFetch from './arrayFetch';\nimport Parent from './practice/parent'\n\n//sending full robots array as a prop to CardList\nReactDOM.render(<Parent />, document.getElementById('root'));\n\n//original ReactDOM.render(<CardList robots={robots } />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}